[
  // Remove zoom shortcuts
  { "key": "ctrl+shift+-", "command": "-workbench.action.zoomOut" },
  { "key": "ctrl+shift+=", "command": "-workbench.action.zoomIn" },

  // Remove ctrl+w shortcuts
  { "key": "ctrl+k ctrl+shift+w", "command": "-workbench.action.closeAllGroups" },
  { "key": "ctrl+k ctrl+w", "command": "-workbench.action.closeAllEditors" },
  { "key": "ctrl+k w", "command": "-workbench.action.closeEditorsInGroup" },
  { "key": "ctrl+shift+w", "command": "-workbench.action.closeWindow" },
  { "key": "ctrl+w", "command": "-workbench.action.closeActiveEditor" },
  { "key": "ctrl+w", "command": "-workbench.action.closeGroup", "when": "activeEditorGroupEmpty && multipleEditorGroups" },

  // Remove quick open shortcuts
  { "key": "alt+left", "command": "-workbench.action.quickInputBack", "when": "inQuickOpen" },
  { "key": "ctrl+e", "command": "-workbench.action.quickOpen" },
  { "key": "ctrl+e", "command": "-workbench.action.quickOpenNavigateNextInFilePicker", "when": "inFilesPicker && inQuickOpen" },
  { "key": "ctrl+p", "command": "-workbench.action.quickOpen" },
  { "key": "ctrl+p", "command": "-workbench.action.quickOpenNavigateNextInFilePicker", "when": "inFilesPicker && inQuickOpen" },
  { "key": "ctrl+q", "command": "-workbench.action.quickOpenNavigateNextInViewPicker", "when": "inQuickOpen && inViewsPicker" },
  { "key": "ctrl+q", "command": "-workbench.action.quickOpenView" },
  { "key": "ctrl+r", "command": "-workbench.action.quickOpenNavigateNextInRecentFilesPicker", "when": "inQuickOpen && inRecentFilesPicker" },
  { "key": "ctrl+shift+e", "command": "-workbench.action.quickOpenNavigatePreviousInFilePicker", "when": "inFilesPicker && inQuickOpen" },
  { "key": "ctrl+shift+p", "command": "-workbench.action.quickOpenNavigatePreviousInFilePicker", "when": "inFilesPicker && inQuickOpen" },
  { "key": "ctrl+shift+q", "command": "-workbench.action.quickOpenNavigatePreviousInViewPicker", "when": "inQuickOpen && inViewsPicker" },
  { "key": "ctrl+shift+r", "command": "-workbench.action.quickOpenNavigatePreviousInRecentFilesPicker", "when": "inQuickOpen && inRecentFilesPicker" },
  { "key": "ctrl+shift+tab", "command": "-workbench.action.quickOpenLeastRecentlyUsedEditorInGroup", "when": "!activeEditorGroupEmpty" },
  { "key": "ctrl+shift+tab", "command": "-workbench.action.quickOpenNavigatePreviousInEditorPicker", "when": "inEditorsPicker && inQuickOpen" },
  { "key": "ctrl+tab", "command": "-workbench.action.quickOpenNavigateNextInEditorPicker", "when": "inEditorsPicker && inQuickOpen" },
  { "key": "ctrl+tab", "command": "-workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup", "when": "!activeEditorGroupEmpty" },
  { "key": "escape", "command": "-workbench.action.closeQuickOpen", "when": "inQuickOpen" },
  { "key": "shift+alt+left", "command": "-editor.action.smartSelect.shrink", "when": "editorTextFocus" },
  { "key": "shift+escape", "command": "-workbench.action.closeQuickOpen", "when": "inQuickOpen" },

  // Remove chat shortcuts
  { "key": "ctrl+alt+enter", "command": "-interactive.acceptChanges", "when": "inlineChatHasProvider && inlineChatVisible && interactiveEditorHasProvider && interactiveEditorVisible && !inlineChatDocumentChanged && !interactiveEditorDocumentChanged || inlineChatHasProvider && inlineChatVisible && interactiveEditorHasProvider && interactiveEditorVisible && !inlineChatDocumentChanged && config.interactiveEditor.editMode != 'preview' || inlineChatHasProvider && inlineChatVisible && interactiveEditorHasProvider && interactiveEditorVisible && !interactiveEditorDocumentChanged && config.inlineChat.mode != 'preview' || inlineChatHasProvider && inlineChatVisible && interactiveEditorHasProvider && interactiveEditorVisible && config.inlineChat.mode != 'preview' && config.interactiveEditor.editMode != 'preview'" },
  { "key": "ctrl+alt+enter", "command": "-workbench.action.chat.runInTerminal", "when": "hasChatProvider && inChat" },
  { "key": "ctrl+alt+i", "command": "-workbench.action.chat.open", "when": "hasChatProvider" },
  { "key": "ctrl+alt+pagedown", "command": "-workbench.action.chat.nextCodeBlock", "when": "hasChatProvider && inChat" },
  { "key": "ctrl+alt+pageup", "command": "-workbench.action.chat.previousCodeBlock", "when": "hasChatProvider && inChat" },
  { "key": "ctrl+down", "command": "-inlineChat.arrowOutDown", "when": "inlineChatFocused && inlineChatHasProvider && inlineChatInnerCursorLast && !accessibilityModeEnabled && !isEmbeddedDiffEditor" },
  { "key": "ctrl+down", "command": "-inlineChat.focus", "when": "editorTextFocus && inlineChatVisible && !accessibilityModeEnabled && !inlineChatFocused && !isEmbeddedDiffEditor && inlineChatOuterCursorPosition == 'above'" },
  { "key": "ctrl+down", "command": "-workbench.action.chat.focusInput", "when": "inChat && !editorFocus" },
  { "key": "ctrl+enter", "command": "-interactive.acceptChanges", "when": "inlineChatHasProvider && inlineChatVisible && !inlineChatDocumentChanged || inlineChatHasProvider && inlineChatVisible && config.inlineChat.mode != 'preview'" },
  { "key": "ctrl+enter", "command": "-notebook.cell.chat.acceptChanges", "when": "inlineChatFocused && notebookCellChatFocused" },
  { "key": "ctrl+enter", "command": "-workbench.action.chat.insertCodeBlock", "when": "hasChatProvider && inChat && !inChatInput" },
  { "key": "ctrl+enter", "command": "-workbench.action.chat.submitSecondaryAgent", "when": "inChatInput && textInputFocus" },
  { "key": "ctrl+f9", "command": "-workbench.action.chat.nextFileTree", "when": "hasChatProvider && inChat" },
  { "key": "ctrl+i", "command": "-inlineChat.start", "when": "editorFocus && inlineChatHasProvider && !editorReadonly" },
  { "key": "ctrl+k i", "command": "-inlineChat.start", "when": "editorFocus && inlineChatHasProvider && !editorReadonly" },
  { "key": "ctrl+l", "command": "-workbench.action.chat.clear", "when": "hasChatProvider && inChat" },
  { "key": "ctrl+shift+f9", "command": "-workbench.action.chat.previousFileTree", "when": "hasChatProvider && inChat" },
  { "key": "ctrl+shift+i", "command": "-workbench.action.quickchat.toggle", "when": "hasChatProvider" },
  { "key": "ctrl+up", "command": "-chat.action.focus", "when": "inChatInput && textInputFocus" },
  { "key": "ctrl+up", "command": "-inlineChat.arrowOutUp", "when": "inlineChatFocused && inlineChatHasProvider && inlineChatInnerCursorFirst && !accessibilityModeEnabled && !isEmbeddedDiffEditor" },
  { "key": "ctrl+up", "command": "-inlineChat.focus", "when": "editorTextFocus && inlineChatVisible && !accessibilityModeEnabled && !inlineChatFocused && !isEmbeddedDiffEditor && inlineChatOuterCursorPosition == 'below'" },
  { "key": "ctrl+z", "command": "-inlineChat.unstash", "when": "inlineChatHasStashedSession && !editorReadonly" },
  { "key": "delete", "command": "-workbench.action.chat.remove", "when": "inChat && !inChatInput" },
  { "key": "down", "command": "-inlineChat.nextFromHistory", "when": "inlineChatFocused && inlineChatHasProvider && inlineChatInnerCursorEnd" },
  { "key": "enter", "command": "-inlineChat.accept", "when": "inlineChatFocused && inlineChatHasProvider && inlineChatVisible && !inlineChatEmpty" },
  { "key": "enter", "command": "-notebook.cell.chat.accept", "when": "inlineChatFocused && notebookCellChatFocused" },
  { "key": "enter", "command": "-workbench.action.chat.acceptInput", "when": "inChatInput && textInputFocus" },
  { "key": "escape", "command": "-inlineChat.cancel", "when": "inlineChatHasProvider && inlineChatVisible" },
  { "key": "escape", "command": "-inlineChat.discard", "when": "inlineChatHasProvider && inlineChatVisible && !inlineChatUserDidEdit" },
  { "key": "escape", "command": "-inlineChat.stop", "when": "inlineChatHasActiveRequest && inlineChatHasProvider && inlineChatVisible && !inlineChatEmpty" },
  { "key": "escape", "command": "-interactive.acceptChanges", "when": "inlineChatHasProvider && inlineChatUserDidEdit && inlineChatVisible && !inlineChatDocumentChanged || inlineChatHasProvider && inlineChatUserDidEdit && inlineChatVisible && config.inlineChat.mode != 'preview'" },
  { "key": "escape", "command": "-notebook.cell.chat.discard", "when": "inlineChatFocused && notebookCellChatFocused && notebookCellListFocused" },
  { "key": "escape", "command": "-workbench.action.chat.stopListening", "when": "hasSpeechProvider && voiceChatInProgress" },
  { "key": "escape", "command": "-workbench.action.chat.stopListeningInChatEditor", "when": "hasSpeechProvider && voiceChatInEditorInProgress" },
  { "key": "escape", "command": "-workbench.action.chat.stopListeningInChatView", "when": "hasSpeechProvider && voiceChatInViewInProgress" },
  { "key": "escape", "command": "-workbench.action.chat.stopListeningInInlineChat", "when": "hasSpeechProvider && inlineVoiceChatInProgress" },
  { "key": "escape", "command": "-workbench.action.chat.stopListeningInQuickChat", "when": "hasSpeechProvider && quickVoiceChatInProgress" },
  { "key": "up", "command": "-inlineChat.previousFromHistory", "when": "inlineChatFocused && inlineChatHasProvider && inlineChatInnerCursorStart" },

  // Remove terminal shortcuts
  { "key": "alt+c", "command": "-workbench.action.terminal.toggleFindCaseSensitive", "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported" },
  { "key": "alt+down", "command": "-workbench.action.terminal.accessibleBufferGoToNextCommand", "when": "accessibleViewIsShown && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'" },
  { "key": "alt+down", "command": "-workbench.action.terminal.focusNextPane", "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported" },
  { "key": "alt+f2", "command": "-workbench.action.terminal.focusAccessibleBuffer", "when": "accessibilityModeEnabled && terminalFocus && terminalHasBeenCreated || accessibilityModeEnabled && terminalFocus && terminalProcessSupported" },
  { "key": "alt+left", "command": "-workbench.action.terminal.focusPreviousPane", "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported" },
  { "key": "alt+r", "command": "-workbench.action.terminal.toggleFindRegex", "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported" },
  { "key": "alt+right", "command": "-workbench.action.terminal.focusNextPane", "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported" },
  { "key": "alt+space", "command": "-workbench.action.terminal.sendSequence", "when": "terminalFocus && terminalShellIntegrationEnabled && !accessibilityModeEnabled && terminalShellType == 'pwsh'" },
  { "key": "alt+up", "command": "-workbench.action.terminal.accessibleBufferGoToPreviousCommand", "when": "accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'" },
  { "key": "alt+up", "command": "-workbench.action.terminal.focusPreviousPane", "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported" },
  { "key": "alt+w", "command": "-workbench.action.terminal.toggleFindWholeWord", "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported" },
  { "key": "alt+z", "command": "-workbench.action.terminal.sizeToContentWidth", "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen || terminalFocus && terminalIsOpen && terminalProcessSupported" },
  { "key": "ctrl+.", "command": "-workbench.action.terminal.showQuickFixes", "when": "terminalFocus" },
  { "key": "ctrl+/", "command": "-workbench.action.terminal.sendSequence", "when": "terminalFocus" },
  { "key": "ctrl+alt+g", "command": "-workbench.action.terminal.sendSequence", "when": "terminalFocus" },
  { "key": "ctrl+alt+pagedown", "command": "-workbench.action.terminal.scrollDown", "when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive" },
  { "key": "ctrl+alt+pageup", "command": "-workbench.action.terminal.scrollUp", "when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive" },
  { "key": "ctrl+alt+r", "command": "-workbench.action.terminal.runRecentCommand", "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled" },
  { "key": "ctrl+alt+r", "command": "-workbench.action.terminal.sendSequence", "when": "accessibilityModeEnabled && terminalFocus" },
  { "key": "ctrl+backspace", "command": "-workbench.action.terminal.sendSequence", "when": "terminalFocus && terminalShellType == 'cmd'" },
  { "key": "ctrl+backspace", "command": "-workbench.action.terminal.sendSequence", "when": "terminalFocus" },
  { "key": "ctrl+c", "command": "-workbench.action.terminal.copyAndClearSelection", "when": "terminalTextSelectedInFocused || terminalFocus && terminalHasBeenCreated && terminalTextSelected || terminalFocus && terminalProcessSupported && terminalTextSelected || terminalFocus && terminalTextSelected && terminalTextSelectedInFocused || terminalHasBeenCreated && terminalTextSelected && terminalTextSelectedInFocused || terminalProcessSupported && terminalTextSelected && terminalTextSelectedInFocused" },
  { "key": "ctrl+delete", "command": "-workbench.action.terminal.sendSequence", "when": "terminalFocus" },
  { "key": "ctrl+down", "command": "-workbench.action.terminal.focus", "when": "accessibilityModeEnabled && accessibleViewOnLastLine && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibilityModeEnabled && accessibleViewOnLastLine && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'" },
  { "key": "ctrl+down", "command": "-workbench.action.terminal.scrollToNextCommand", "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled" },
  { "key": "ctrl+end", "command": "-workbench.action.terminal.scrollToBottom", "when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive" },
  { "key": "ctrl+f", "command": "-workbench.action.terminal.focusFind", "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported" },
  { "key": "ctrl+f4", "command": "-workbench.action.terminal.killEditor", "when": "terminalEditorFocus && terminalFocus && terminalHasBeenCreated || terminalEditorFocus && terminalFocus && terminalProcessSupported" },
  { "key": "ctrl+g", "command": "-workbench.action.terminal.goToRecentDirectory", "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported" },
  { "key": "ctrl+home", "command": "-workbench.action.terminal.scrollToTop", "when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive" },
  { "key": "ctrl+k ctrl+i", "command": "-workbench.action.terminal.focusHover", "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalIsOpen || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus" },
  { "key": "ctrl+pagedown", "command": "-workbench.action.terminal.focusNext", "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus" },
  { "key": "ctrl+pageup", "command": "-workbench.action.terminal.focusPrevious", "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus" },
  { "key": "ctrl+r", "command": "-workbench.action.terminal.runRecentCommand", "when": "accessibilityModeEnabled && terminalFocus && terminalHasBeenCreated || accessibilityModeEnabled && terminalFocus && terminalProcessSupported || accessibilityModeEnabled && accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibilityModeEnabled && accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'" },
  { "key": "ctrl+shift+'", "command": "-workbench.action.terminal.new", "when": "terminalProcessSupported || terminalWebExtensionContributedProfile" },
  { "key": "ctrl+shift+*", "command": "-workbench.action.terminal.focusTabs", "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus" },
  { "key": "ctrl+shift+2", "command": "-workbench.action.terminal.sendSequence", "when": "terminalFocus" },
  { "key": "ctrl+shift+5", "command": "-workbench.action.terminal.split", "when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile" },
  { "key": "ctrl+shift+5", "command": "-workbench.action.terminal.splitActiveTab", "when": "terminalProcessSupported && terminalTabsFocus" },
  { "key": "ctrl+shift+6", "command": "-workbench.action.terminal.sendSequence", "when": "terminalFocus" },
  { "key": "ctrl+shift+c", "command": "-workbench.action.terminal.copySelection", "when": "terminalTextSelectedInFocused || terminalFocus && terminalHasBeenCreated && terminalTextSelected || terminalFocus && terminalProcessSupported && terminalTextSelected || terminalFocus && terminalTextSelected && terminalTextSelectedInFocused || terminalHasBeenCreated && terminalTextSelected && terminalTextSelectedInFocused || terminalProcessSupported && terminalTextSelected && terminalTextSelectedInFocused" },
  { "key": "ctrl+shift+c", "command": "-workbench.action.terminal.openNativeConsole", "when": "!terminalFocus" },
  { "key": "ctrl+shift+down", "command": "-workbench.action.terminal.selectToNextCommand", "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported" },
  { "key": "ctrl+shift+f", "command": "-workbench.action.terminal.searchWorkspace", "when": "terminalFocus && terminalProcessSupported && terminalTextSelected" },
  { "key": "ctrl+shift+g", "command": "-workbench.action.terminal.openDetectedLink", "when": "accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal'" },
  { "key": "ctrl+shift+o", "command": "-workbench.action.terminal.openDetectedLink", "when": "terminalFocus && terminalHasBeenCreated" },
  { "key": "ctrl+shift+oem_3", "command": "-workbench.action.terminal.new", "when": "terminalProcessSupported || terminalWebExtensionContributedProfile" },
  { "key": "ctrl+shift+up", "command": "-workbench.action.terminal.selectToPreviousCommand", "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported" },
  { "key": "ctrl+shift+v", "command": "-workbench.action.terminal.paste", "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported" },
  { "key": "ctrl+space", "command": "-workbench.action.terminal.sendSequence", "when": "config.terminal.integrated.shellIntegration.suggestEnabled && terminalFocus && terminalShellIntegrationEnabled && !accessibilityModeEnabled && terminalShellType == 'pwsh'" },
  { "key": "ctrl+space", "command": "-workbench.action.terminal.sendSequence", "when": "terminalFocus && terminalShellIntegrationEnabled && !accessibilityModeEnabled && terminalShellType == 'pwsh'" },
  { "key": "ctrl+up", "command": "-workbench.action.terminal.focusAccessibleBuffer", "when": "accessibilityModeEnabled && terminalFocus && terminalHasBeenCreated || accessibilityModeEnabled && terminalFocus && terminalProcessSupported" },
  { "key": "ctrl+up", "command": "-workbench.action.terminal.scrollToPreviousCommand", "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled" },
  { "key": "ctrl+v", "command": "-workbench.action.terminal.paste", "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported" },
  { "key": "ctrl+v", "command": "-workbench.action.terminal.sendSequence", "when": "terminalFocus && !accessibilityModeEnabled && terminalShellType == 'pwsh'" },
  { "key": "ctrl+w", "command": "-workbench.action.terminal.killEditor", "when": "terminalEditorFocus && terminalFocus && terminalHasBeenCreated || terminalEditorFocus && terminalFocus && terminalProcessSupported" },
  { "key": "delete", "command": "-workbench.action.terminal.killActiveTab", "when": "terminalHasBeenCreated && terminalTabsFocus || terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus" },
  { "key": "down", "command": "-workbench.action.terminal.selectNextSuggestion", "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible" },
  { "key": "enter", "command": "-workbench.action.terminal.acceptSelectedSuggestion", "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible" },
  { "key": "enter", "command": "-workbench.action.terminal.findPrevious", "when": "terminalFindInputFocused && terminalHasBeenCreated || terminalFindInputFocused && terminalProcessSupported" },
  { "key": "escape", "command": "-workbench.action.terminal.clearSelection", "when": "terminalFocusInAny && terminalHasBeenCreated && terminalTextSelected && !terminalFindVisible || terminalFocusInAny && terminalProcessSupported && terminalTextSelected && !terminalFindVisible" },
  { "key": "escape", "command": "-workbench.action.terminal.hideFind", "when": "terminalFindVisible && terminalFocusInAny && terminalHasBeenCreated || terminalFindVisible && terminalFocusInAny && terminalProcessSupported" },
  { "key": "escape", "command": "-workbench.action.terminal.hideSuggestWidget", "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible" },
  { "key": "f2", "command": "-workbench.action.terminal.renameActiveTab", "when": "terminalHasBeenCreated && terminalTabsFocus && terminalTabsSingularSelection || terminalProcessSupported && terminalTabsFocus && terminalTabsSingularSelection" },
  { "key": "f3", "command": "-workbench.action.terminal.findNext", "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported" },
  { "key": "pagedown", "command": "-workbench.action.terminal.selectNextPageSuggestion", "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible" },
  { "key": "pageup", "command": "-workbench.action.terminal.selectPrevPageSuggestion", "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible" },
  { "key": "shift+enter", "command": "-workbench.action.terminal.findNext", "when": "terminalFindInputFocused && terminalHasBeenCreated || terminalFindInputFocused && terminalProcessSupported" },
  { "key": "shift+enter", "command": "-workbench.action.terminal.sendSequence", "when": "terminalFocus && terminalShellIntegrationEnabled && !accessibilityModeEnabled && terminalShellType == 'pwsh'" },
  { "key": "shift+escape", "command": "-workbench.action.terminal.hideFind", "when": "terminalFindVisible && terminalFocusInAny && terminalHasBeenCreated || terminalFindVisible && terminalFocusInAny && terminalProcessSupported" },
  { "key": "shift+f3", "command": "-workbench.action.terminal.findPrevious", "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported" },
  { "key": "shift+pagedown", "command": "-workbench.action.terminal.scrollDownPage", "when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive" },
  { "key": "shift+pageup", "command": "-workbench.action.terminal.scrollUpPage", "when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive" },
  { "key": "tab", "command": "-workbench.action.terminal.acceptSelectedSuggestion", "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible" },
  { "key": "up", "command": "-workbench.action.terminal.selectPrevSuggestion", "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible" },

  // Remove Python execute selection in terminal shortcut
  { "key": "shift+enter", "command": "-python.execSelectionInTerminal", "when": "editorTextFocus && !findInputFocussed && !jupyter.ownsSelection && !notebookEditorFocused && !replaceInputFocussed && editorLangId == 'python'" },

  // Navigate to previous or next recently used editor in group
  { "key": "alt+left", "command": "-workbench.action.navigateBack", "when": "canNavigateBack" },
  { "key": "alt+right", "command": "-workbench.action.navigateForward", "when": "canNavigateForward" },
  { "key": "alt+left", "command": "workbench.action.openPreviousRecentlyUsedEditorInGroup" },
  { "key": "alt+right", "command": "workbench.action.openNextRecentlyUsedEditorInGroup" },

  // Select all highlights or matches
  { "key": "ctrl+shift+l", "command": "-selectAllSearchEditorMatches", "when": "inSearchEditor" },
  { "key": "ctrl+shift+l", "command": "-editor.action.selectHighlights", "when": "editorFocus" },
  { "key": "ctrl+shift+a", "command": "editor.action.selectHighlights", "when": "editorFocus" },
  { "key": "ctrl+shift+a", "command": "selectAllSearchEditorMatches", "when": "inSearchEditor" },

  // Rename symbol
  { "key": "ctrl+r", "command": "-workbench.action.openRecent" },
  { "key": "f2", "command": "-editor.action.rename", "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly" },
  { "key": "ctrl+r", "command": "editor.action.rename", "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly" },

  // Smart select
  { "key": "shift+alt+right", "command": "-editor.action.smartSelect.expand", "when": "editorTextFocus" },
  { "key": "ctrl+q", "command": "editor.action.smartSelect.expand", "when": "editorTextFocus" },

  // Sort lines
  { "key": "shift+alt+a", "command": "-editor.action.blockComment", "when": "editorTextFocus && !editorReadonly" },
  { "key": "shift+alt+a", "command": "editor.action.sortLinesAscending", "when": "editorTextFocus && !editorReadonly" },

  // Show definition preview
  { "key": "ctrl+k ctrl+i", "command": "-editor.action.showHover", "when": "editorTextFocus" },
  { "key": "ctrl+k ctrl+i", "command": "editor.action.showDefinitionPreviewHover", "when": "editorTextFocus" },

  // Go to definition
  { "key": "ctrl+g", "command": "-workbench.action.gotoLine" },
  { "key": "ctrl+g", "command": "editor.action.goToTypeDefinition" },

  // Delete lines
  { "key": "ctrl+shift+k", "command": "-editor.action.deleteLines", "when": "textInputFocus && !editorReadonly" },
  { "key": "ctrl+d", "command": "editor.action.deleteLines", "when": "editorTextFocus && !editorReadonly" },

  // Open command palette
  { "key": "ctrl+shift+p", "command": "-workbench.action.showCommands" },
  { "key": "ctrl+p", "command": "workbench.action.showCommands" },

  // Toggle terminal
  { "key": "ctrl+j", "command": "-workbench.action.togglePanel" },
  { "key": "ctrl+`", "command": "-workbench.action.terminal.toggleTerminal", "when": "terminal.active" },
  { "key": "ctrl+j", "command": "terminal.focus", "when": "!terminalFocus" },
  { "key": "ctrl+j", "command": "workbench.action.togglePanel", "when": "terminalFocus" },

  // Navigate trough code up and down
  { "key": "ctrl+up", "command": "cursorMove", "when": "editorTextFocus", "args": { "to": "up", "by": "line", "value": 10 } },
  { "key": "ctrl+down", "command": "cursorMove", "when": "editorTextFocus", "args": { "to": "down", "by": "line", "value": 10 } },

  // Close active editor group
  { "key": "ctrl+w", "command": "workbench.action.closeEditorsInGroup", "when": "editorFocus || editorTextFocus" },

  // Create and kill terminal
  { "key": "ctrl+w", "command": "workbench.action.terminal.kill", "when": "terminalFocus" },
  { "key": "ctrl+n", "command": "workbench.action.terminal.new", "when": "terminalFocus" },

  // Open quick open
  { "key": "ctrl+tab", "command": "workbench.action.quickOpen" },
  { "key": "ctrl+tab", "command": "workbench.action.quickOpenNavigateNext", "when": "inQuickOpen" },

  // Clear recent files on quick open
  { "key": "ctrl+delete", "command": "workbench.action.clearRecentFiles", "when": "inQuickOpen" },

  // Reveal file in OS file explorer 
  { "key": "ctrl+shift+e", "command": "revealFileInOS" },

  // Scroll up and down trough terminal
  { "key": "ctrl+up", "command": "workbench.action.terminal.scrollUp", "when": "terminalFocus" },
  { "key": "ctrl+down", "command": "workbench.action.terminal.scrollDown", "when": "terminalFocus" },

  // Create new file
  { "key": "ctrl+n", "command": "-workbench.action.files.newUntitledFile" },
  { "key": "ctrl+n", "command": "runCommands", "when": "workspaceFolderCount >= 1",
    "args": {
      "commands": [
        "workbench.files.action.collapseExplorerFolders",
        "workbench.files.action.createFileFromExplorer"
      ]
    }
  },

  // File explorer: focus
  { "key": "ctrl+shift+e", "command": "-workbench.view.explorer", "when": "viewContainer.workbench.view.explorer.enabled" },
  { "key": "ctrl+e", "command": "workbench.view.explorer", "when": "viewContainer.workbench.view.explorer.enabled" },

  // File explorer: one letter shortcuts
  { "key": "c", "command": "filesExplorer.copy", "when": "filesExplorerFocus && !inputFocus" },
  { "key": "d", "command": "deleteFile", "when": "filesExplorerFocus && !inputFocus" },
  { "key": "e", "command": "workbench.files.action.collapseExplorerFolders", "when": "filesExplorerFocus && !inputFocus" },
  { "key": "n", "command": "explorer.newFile", "when": "filesExplorerFocus && !inputFocus" },
  { "key": "r", "command": "renameFile", "when": "filesExplorerFocus && !inputFocus" },
  { "key": "v", "command": "filesExplorer.paste", "when": "filesExplorerFocus && !inputFocus" },
  { "key": "x", "command": "filesExplorer.cut", "when": "filesExplorerFocus && !inputFocus" },

  // Markdown: toggle preview
  { "key": "ctrl+shift+v", "command": "workbench.action.navigateBack", "when": "activeWebviewPanelId == 'markdown.preview'" },

  // CSV: toggle preview
  { "key": "ctrl+shift+v", "command": "workbench.action.navigateBack", "when": "activeWebviewPanelId == 'gc-excelviewer-csv-preview'" },

  // Notebook: join bellow cell
  { "key": "ctrl+shift+=", "command": "-workbench.action.zoomIn" },
  { "key": "alt+win+j", "command": "-notebook.cell.joinBelow", "when": "notebookEditorFocused" },
  { "key": "ctrl+shift+=", "command": "notebook.cell.joinBelow", "when": "notebookEditorFocused" },

  // Notebook: navigate up and down through definition hover
  { "key": "down", "command": "editor.action.pageDownHover", "when": "notebookEditorFocused && editorHoverFocused" },
  { "key": "up", "command": "editor.action.pageUpHover", "when": "notebookEditorFocused && editorHoverFocused" },

  // Python: save file, run it in terminal and focus editor
  { "key": "ctrl+alt+enter", "command": "runCommands", "when": "!editorReadonly && resourceExtname == '.py'",
    "args": {
      "commands": [
        "workbench.action.files.save",
        "python.execInTerminal",
        "terminal.focus"
      ]
    }
  },

  // Reload window
  { "key": "ctrl+shift+r", "command": "-editor.action.refactor", "when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly" },
  { "key": "ctrl+shift+r", "command": "-rerunSearchEditorSearch", "when": "inSearchEditor" },
  { "key": "ctrl+shift+r", "command": "python.clearCacheAndReload", "when": "resource == '.py'" },
  { "key": "ctrl+shift+r", "command": "workbench.action.reloadWindow", "when": "resource != '.py'" }
]
